// Basic Exercises involving Bools

type Bool {
  true
  false
}

// Is true
// Returns true if input is true
is_true(a: Bool): Bool
  a

// Is false
// Returns true if input is false
is_false(a: Bool): Bool
  case a {
    false: Bool.true
    true: Bool.false
  }

// Negation
// Returns the opposite of a Bool
neg(b: Bool): Bool 
  case b {
    true: Bool.false
    false: Bool.true
  }

// And
// Returns true if both inputs are true
and(a: Bool, b: Bool): Bool
  case a {
    false: a
    true: b
    }

// Or
// Returs true if any input is true
or(a: Bool, b: Bool): Bool
  case a {  
    true: a
    false:b
    }

// Equal
// Returs true if both inputs are identical
eql(a: Bool, b: Bool): Bool
  case a {
    true: b
    false: case b {
            false: Bool.true
            true: Bool.false
       }
  } 

// Xor
// Returns true if both inputs are different
xor(a: Bool, b: Bool): Bool
  case a {
    true: case b {
            false: Bool.true
            true: Bool.false
      }
    false: b
    }

// Nor
// Returns true if both inputs are false
nor(a: Bool, b: Bool): Bool
  case a {
    false: case b {
             true: Bool.false
             false: Bool.true
       }
    true: Bool.false
  }

// Nand
// Returns false only if both inputs are true
nand(a: Bool, b: Bool): Bool
  case a {
    true: case b {
            true: Bool.false
            false: Bool.true
      }
    false: Bool.true
  }

// Xnor
// Returns true if both inputs are identical
xnor(a: Bool, b: Bool): Bool
  case a {
    true: b
    false: case b {
             true: Bool.false
             false: Bool.true
       }
  }

ex_00: Bool
  let a = true
  let b = false
  let c = true
  let d = false
//  is_true(a)  // Returns true if input is true
//  is_false(b)   // Returns true if input is false
//  neg(a)      // Returns the opposite of a Bool
//  and(a, c)   // Returns true if both inputs are true
//  or(a, c)    // Returs true if any input is true
//  eql(b, d)   // Returs true if both inputs are identical
//  xor(d, b)   // Returns true if both inputs are different
//  nor(a, b)   // Returns true if both inputs are false
//  nand(b, a)  // Returns false only if both inputs are true
  xnor(b,d)   // Returns true if both inputs are identical
